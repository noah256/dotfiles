# undo the shenanigans from a community cookbook
set -g prefix C-b
set -g prefix2 C-b
unbind C-a

# easy to remember split commands
unbind %
bind | split-window -h
bind - split-window -v

# yay mouse powers
set-option -g mouse-select-pane on

# The colors, duke! The colors!
set -g default-terminal "xterm-256color"
source ~/.tmux/colors.conf

# start window indexing at 1
# (mainly nice because 0 is at the far right side of the keyboard)
set -g base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# ^P is the signal my extra "Menu" key sends. Bind it as a prefix key
if-shell 'test "$(tmux -V)" = "tmux 1.5"' 'set -g prefix C-b,C-p'
if-shell 'test "$(tmux -V)" = "tmux 1.6"' 'set -g prefix2 C-p'

# shortcut to reload this config file
bind r source-file ~/.tmux.conf

# moar scrollback
set-option -g history-limit 10000

# vi style keys
set -g status-keys vi
setw -g mode-keys vi

# make yanking in copy mode a little more like vim
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# make xterm-keys pass through to the underlying term
set-window-option -g xterm-keys on

### Status line options
set -g status on
set -g status-utf8 on

# Disable refresh, as I don't have dynamic components
set -g status-interval 0

# Just a little bit of padding on the left
set -g status-left " "

# Hostname and Session name on the right
set -g status-right-fg colour4
set -g status-right "#h [#S] "

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
