set nocompatible

" my preferred leader key. Set this first so if things are binding to leader
" they bind to my leader instead of the default.
let mapleader = ","

" Load plugins
call plug#begin()
Plug 'Raimondi/delimitMate'
Plug 'chriskempson/base16-vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'mxw/vim-jsx'
Plug 'neomake/neomake'
Plug 'pangloss/vim-javascript'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-pathogen'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'wincent/Command-T'
call plug#end()

" set up colors
set background=dark
colorscheme base16-solarized-dark

" search options
set ignorecase " make / searches case insensitive
set smartcase " (unless they contain a capital)
set hlsearch " highlight search results
" <leader><space> to clear search
nnoremap <leader><space> :let @/=''<cr>

" tab settings
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2

" indent settings
set smartindent

syntax on

set showmode
set showcmd
set visualbell
set hidden       " enables better buffer support
set showmatch    " show matching parens
set nowrap

" make command completion more like readline
set wildmode=list:longest

" Invisible Characters
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.
noremap <Leader>i :set list!<CR> " Toggle invisible chars

" map ; to : for the quickness
nnoremap ; :

" exchange ` and '
nnoremap ' `
nnoremap ` '

" Remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" Use `s' to insert a Single character
nnoremap s :exec "normal i".nr2char(getchar())."\e"<CR>

if has("mouse")
  set mouse=a
endif

" show line numbers
set nu

" show a little more context than the sensible.vim default
set scrolloff=3

"syntax highlighting for erb files
autocmd BufRead,BufNewFile *.erb set filetype=eruby.html

" enable spellcheck in commit messages
au BufNewFile,BufRead COMMIT_EDITMSG setlocal spell

" convert hashrockets to ruby 1.9 syntax
nmap <leader>rh :%s/\v(:)@<!:([a-zA-Z_][a-zA-Z_0-9]*)(\s*)\=\>\s?/\2:\3/gc<cr>

" easy acking
function! AckGrep(command)
  cexpr system("ack --column " . a:command)
  cw
endfunction

command! -nargs=+ -complete=file Ack call AckGrep(<q-args>)
nnoremap <leader>a :Ack<space>

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

" ignore existing swapfile warning
set shortmess+=A

" No splash screen
set shortmess+=I

" highlight the wrap column and column 100 (Brigade hard line length limit)
if exists('+colorcolumn')
  set colorcolumn=+0,100
  highlight ColorColumn ctermbg=black
endif

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Neomake
autocmd! BufWritePost * Neomake
let g:neomake_jsx_enabled_makers = ['eslint']
let g:neomake_javascript_enabled_makers = ['eslint']
let g:neomake_jsx_eslint_exe = $PWD .'/node_modules/.bin/eslint'
let g:neomake_javascript_eslint_exe = $PWD .'/node_modules/.bin/eslint'

" Pretty it up a little
let g:neomake_error_sign = { 'text': '✗' }
let g:neomake_warning_sign = { 'text': '⚠' }

" add an easy way to leave insert mode
imap jj <Esc>

" testing airline
set laststatus=2
set noshowmode
let g:airline_powerline_fonts = 1

" skip bower managed node_modules directory when searching
set wildignore+=node_modules/**
